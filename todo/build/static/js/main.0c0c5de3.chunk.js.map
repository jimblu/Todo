{"version":3,"sources":["components/NavBar.js","components/ToDo.js","components/ToDoList.js","components/AddTask.js","initialData.js","components/Fetching.js","components/App.js","index.js"],"names":["NavBar","_ref","onDeleteCompleted","react_default","a","createElement","className","id","react_router_dom","to","exact","index_esm","onClick","ToDo","state","completed","_this","props","task","toggleCompleted","setState","prevState","onToggleCompleted","_this2","this","name","React","Component","ToDoList","filteredTasks","tasks","match","params","filter","length","Fragment","map","components_ToDo","key","AddTask","handleSubmit","e","preventDefault","onAddTask","newTask","value","history","push","onSubmit","form","type","required","ref","input","initialData","Fetching","App","fetching","componentDidMount","delay","Math","floor","random","setTimeout","taskId","taskToUpdate","find","newTaskName","uniqueid","concat","Object","toConsumableArray","components_Fetching","react_router","path","render","components_AddTask","assign","components_ToDoList","components_NavBar","ReactDOM","components_App","document","getElementById"],"mappings":"kQAsCeA,EA7BA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,kBAAH,OACbC,EAAAC,EAAAC,cAAA,UACEC,UAAU,kDACVC,GAAG,cAEHJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAG,IAAIH,UAAU,gCAAgCI,OAAO,GAC/DP,EAAAC,EAAAC,cAACM,EAAA,EAAD,OAEFR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAG,aAAaH,UAAU,iCACjCH,EAAAC,EAAAC,cAACM,EAAA,EAAD,OAEFR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,YACHH,UAAU,gCACVI,OAAO,GAEPP,EAAAC,EAAAC,cAACM,EAAA,EAAD,QAGJR,EAAAC,EAAAC,cAAA,UACEC,UAAU,gCACVM,QAASV,GAETC,EAAAC,EAAAC,cAACM,EAAA,EAAD,SCRSE,6MArBXC,MAAQ,CACJC,UAAWC,EAAKC,MAAMC,KAAKH,aAG/BI,gBAAkB,WACdH,EAAKI,SAAS,SAAAC,GAAS,MAAK,CACxBN,WAAYM,EAAUN,aAE1BC,EAAKC,MAAMK,kBAAkBN,EAAKC,MAAMC,KAAKX,6EAGzC,IAAAgB,EAAAC,KACJ,OACIrB,EAAAC,EAAAC,cAAA,MAAIC,UAAW,8CAAgDkB,KAAKV,MAAMC,UAAW,aAAc,OAC9FS,KAAKP,MAAMC,KAAKO,KACjBtB,EAAAC,EAAAC,cAAA,UAAQC,UAAW,uBAAyBkB,KAAKV,MAAMC,UAAW,cAAe,uBAAwBH,QAAS,kBAAMW,EAAKJ,oBAA7H,kBAjBGO,IAAMC,WCuCVC,EAtCE,SAAA3B,GAAyC,IACpD4B,EADcC,EAAsC7B,EAAtC6B,MAAOC,EAA+B9B,EAA/B8B,MAAOT,EAAwBrB,EAAxBqB,kBAGhC,OAAQS,EAAMC,OAAOC,QACnB,IAAK,YACHJ,EAAgBC,EAAMG,OAAO,SAACf,GAAD,OAAUA,EAAKH,YAC5C,MACF,QACEc,EAAgBC,EAGpB,OAA6B,IAAzBD,EAAcK,OAEd/B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACEhC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,sBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,mCAMJH,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACEhC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,sBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXuB,EAAcO,IAAI,SAAClB,GAAD,OACjBf,EAAAC,EAAAC,cAACgC,EAAD,CACEnB,KAAMA,EACNoB,IAAKpB,EAAKX,GACVe,kBAAmBA,SCIlBiB,6MAjCbC,aAAe,SAACC,GACdA,EAAEC,iBACF1B,EAAKC,MAAM0B,UAAU3B,EAAK4B,QAAQC,OAClC7B,EAAKC,MAAM6B,QAAQC,KAAK,8EAGjB,IAAAxB,EAAAC,KACP,OACErB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAY0C,SAAU,SAACP,GAAD,OAAOlB,EAAKiB,aAAaC,KAC7DtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAO4C,KAAK,YAAZ,sBACA9C,EAAAC,EAAAC,cAAA,SACE6C,KAAK,OACL5C,UAAU,eACVmB,KAAK,WACLlB,GAAG,WACH4C,UAAQ,EACRC,IAAK,SAACC,GAAD,OAAY9B,EAAKqB,QAAUS,MAGpClD,EAAAC,EAAAC,cAAA,UAAQ6C,KAAK,SAAS5C,UAAU,mBAAhC,sBAxBUoB,IAAMC,kBCKb2B,EAPG,CAChB,CAAE/C,GAAI,WAAYkB,KAAM,sBAAuBV,WAAW,GAC1D,CAAER,GAAI,WAAYkB,KAAM,6BAA2BV,WAAW,GAC9D,CAAER,GAAI,WAAYkB,KAAM,iBAAkBV,WAAW,GACrD,CAAER,GAAI,WAAYkB,KAAM,mBAAoBV,WAAW,qBCK1CwC,EANE,kBACbpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAWL,UAAU,cCiFdkD,6MA5Eb1C,MAAQ,CACNgB,MAAO,GACP2B,UAAU,KAEZC,kBAAoB,WAClB,IAAIC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5BC,WAAW,WACT/C,EAAKI,SAAS,CACZqC,UAAU,EACV3B,MAAOwB,KAERK,MAGLrC,kBAAoB,SAAC0C,GACnB,IAAIC,EAAejD,EAAKF,MAAMgB,MAAMoC,KAAK,SAAChD,GAAD,OAAUA,EAAKX,KAAOyD,IAC/DC,EAAalD,WAAakD,EAAalD,UAEvCC,EAAKI,SAAS,SAACC,GAAD,OACZA,EAAUS,MAAMM,IAAI,SAAClB,GACnB,OAAOA,EAAKX,KAAOyD,EAASC,EAAe/C,SAKjDyB,UAAY,SAACwB,GACX,IAAIvB,EAAU,CACZrC,GAAI6D,MACJ3C,KAAM0C,EACNpD,WAAW,GAGbC,EAAKI,SAAS,SAACC,GAAD,MAAgB,CAC5BS,MAAK,GAAAuC,OAAAC,OAAAC,EAAA,EAAAD,CAAMjD,EAAUS,OAAhB,CAAuBc,UAIhC1C,kBAAoB,WAClBc,EAAKI,SAAS,SAACC,GAEb,MAAO,CACLS,MAFaT,EAAUS,MAAMG,OAAO,SAACf,GAAD,OAAWA,EAAKH,wFAOjD,IAAAQ,EAAAC,KACP,OACErB,EAAAC,EAAAC,cAAA,WAASE,GAAG,QACTiB,KAAKV,MAAM2C,SAAWtD,EAAAC,EAAAC,cAACmE,EAAD,MAAe,KACtCrE,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACEtE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,KAAK,YACLC,OAAQ,SAAC1D,GAAD,OACNd,EAAAC,EAAAC,cAACuE,EAADN,OAAAO,OAAA,GAAa5D,EAAb,CAAoB0B,UAAWpB,EAAKoB,gBAGxCxC,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,KAAK,YACLC,OAAQ,SAAC1D,GAAD,OACNd,EAAAC,EAAAC,cAACyE,EAADR,OAAAO,OAAA,GACM5D,EADN,CAEEa,MAAOP,EAAKT,MAAMgB,MAClBR,kBAAmBC,EAAKD,yBAKhCnB,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ7E,kBAAmBsB,KAAKtB,6BAtExBwB,IAAMC,iBCHxBqD,IAASL,OAAOxE,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0c0c5de3.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  FaListAlt,\n  FaCheckSquare,\n  FaPlusSquare,\n  FaTrash,\n} from \"react-icons/fa\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ onDeleteCompleted }) => (\n  <footer\n    className=\"d-flex justify-content-between bg-secondary p-3\"\n    id=\"mainFooter\"\n  >\n    <div className=\"btn-group\">\n      <NavLink to=\"/\" className=\"btn btn-outline-dark bg-light\" exact={true}>\n        <FaListAlt />\n      </NavLink>\n      <NavLink to=\"/completed\" className=\"btn btn-outline-dark bg-light\">\n        <FaCheckSquare />\n      </NavLink>\n      <NavLink\n        to=\"/add-task\"\n        className=\"btn btn-outline-dark bg-light\"\n        exact={true}\n      >\n        <FaPlusSquare />\n      </NavLink>\n    </div>\n    <button\n      className=\"btn btn-outline-dark bg-light\"\n      onClick={onDeleteCompleted}\n    >\n      <FaTrash />\n    </button>\n  </footer>\n);\n\nexport default NavBar;\n","import React from 'react'\n\nclass ToDo extends React.Component{\n\n    state = {\n        completed: this.props.task.completed\n    }\n\n    toggleCompleted = () => {\n        this.setState(prevState => ({\n            completed: !prevState.completed\n        }))\n        this.props.onToggleCompleted(this.props.task.id)\n    }\n\n    render(){\n        return (\n            <li className={\"list-group-item d-flex align-tiems-center \" + (this.state.completed? 'bg-success': null)}>\n                {this.props.task.name}\n                <button className={\"btn btn-sm ml-auto \" + (this.state.completed? 'btn-success': 'btn-outline-success')} onClick={() => this.toggleCompleted()}>&#x2713;</button>\n            </li>\n        )\n    }\n}\n\nexport default ToDo","import React from \"react\";\nimport ToDo from \"./ToDo\";\n\nconst ToDoList = ({ tasks, match, onToggleCompleted }) => {\n  let filteredTasks;\n\n  switch (match.params.filter) {\n    case \"completed\":\n      filteredTasks = tasks.filter((task) => task.completed);\n      break;\n    default:\n      filteredTasks = tasks;\n  }\n\n  if (filteredTasks.length === 0) {\n    return (\n      <>\n        <h1 className=\"m-3\">Liste de tâches</h1>\n        <ul className=\"list-group m-3\">\n          <li className=\"list-group-item\">Aucune tâche à afficher</li>\n        </ul>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <h1 className=\"m-3\">Liste de tâches</h1>\n        <ul className=\"list-group m-3\">\n          {filteredTasks.map((task) => (\n            <ToDo\n              task={task}\n              key={task.id}\n              onToggleCompleted={onToggleCompleted}\n            />\n          ))}\n        </ul>\n      </>\n    );\n  }\n};\n\nexport default ToDoList;\n","import React from \"react\";\n\nclass AddTask extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddTask(this.newTask.value);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <section>\n        <h1 className=\"m-3\">Nouvelle tâche</h1>\n        <div className=\"card mx-3\">\n          <form className=\"card-body\" onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"form-group\">\n              <label form=\"taskName\">Nom de la tâche</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"taskName\"\n                id=\"taskName\"\n                required\n                ref={(input) => (this.newTask = input)}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Créer\n            </button>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AddTask;\n","let initialData = [\n  { id: \"jsertu7a\", name: \"Ranger la vaisselle\", completed: false },\n  { id: \"jseruo7l\", name: \"Répondre appel d'offres\", completed: false },\n  { id: \"jseruy2q\", name: \"Signer contrat\", completed: false },\n  { id: \"jserv4sw\", name: \"Aspirer le salon\", completed: false },\n];\n\nexport default initialData;\n","import React from 'react'\nimport { FaSpinner } from 'react-icons/fa'\n\nconst Fetching = () => (\n    <div className=\"fetching\">\n        <FaSpinner className=\"spinner\" />\n    </div>\n)\n\nexport default Fetching","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport ToDoList from \"./ToDoList\";\nimport AddTask from \"./AddTask\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport initialData from \"../initialData\";\nimport uniqueid from \"uniqueid\";\nimport Fetching from \"./Fetching\";\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    fetching: true,\n  };\n  componentDidMount = () => {\n    let delay = Math.floor(Math.random() * 5000);\n    setTimeout(() => {\n      this.setState({\n        fetching: false,\n        tasks: initialData,\n      });\n    }, delay);\n  };\n\n  onToggleCompleted = (taskId) => {\n    let taskToUpdate = this.state.tasks.find((task) => task.id === taskId);\n    taskToUpdate.completed = !taskToUpdate.completed;\n\n    this.setState((prevState) =>\n      prevState.tasks.map((task) => {\n        return task.id === taskId ? taskToUpdate : task;\n      })\n    );\n  };\n\n  onAddTask = (newTaskName) => {\n    let newTask = {\n      id: uniqueid(),\n      name: newTaskName,\n      completed: false,\n    };\n\n    this.setState((prevState) => ({\n      tasks: [...prevState.tasks, newTask],\n    }));\n  };\n\n  onDeleteCompleted = () => {\n    this.setState((prevState) => {\n      let newState = prevState.tasks.filter((task) => !task.completed);\n      return {\n        tasks: newState,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <section id=\"todo\">\n        {this.state.fetching ? <Fetching /> : null}\n        <BrowserRouter>\n          <Switch>\n            <Route\n              path=\"/add-task\"\n              render={(props) => (\n                <AddTask {...props} onAddTask={this.onAddTask} />\n              )}\n            />\n            <Route\n              path=\"/:filter?\"\n              render={(props) => (\n                <ToDoList\n                  {...props}\n                  tasks={this.state.tasks}\n                  onToggleCompleted={this.onToggleCompleted}\n                />\n              )}\n            />\n          </Switch>\n          <NavBar onDeleteCompleted={this.onDeleteCompleted} />\n        </BrowserRouter>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/App\";\nimport \"./css/toDo.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}